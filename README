Apache CouchDB README
=====================

Installation
------------

To build and install Apache CouchDB you will need the following installed:

 * Erlang OTP (>=R12B5)    (http://erlang.org/)
 * ICU                     (http://icu.sourceforge.net/)
 * OpenSSL                 (http://www.openssl.org/)
 * Mozilla SpiderMonkey    (http://www.mozilla.org/js/spidermonkey/)
 * libcurl                 (http://curl.haxx.se/libcurl/)
 * GNU Make                (http://www.gnu.org/software/make/)
 * GNU Compiler Collection (http://gcc.gnu.org/)

It is recommended that you install Erlang OTP R12B-5 or above where possible.

General installation instructions:

For a low-level guide, see:

    INSTALL

For a high-level guide to Unix-like systems, inc. Mac OS X and Ubuntu, see:

    INSTALL.Unix

For a high-level guide to Microsoft Windows, see:

    INSTALL.Windows

Follow the proper instructions to get CouchDB installed on your system.

If you're having problems, skip to the next section.

Troubleshooting
----------------

For troubleshooting, see:

    http://wiki.apache.org/couchdb/Troubleshooting

If you're getting a cryptic error message, see:

    http://wiki.apache.org/couchdb/Error_messages

<<<<<<< HEAD:README
The mailing lists also provide a wealth of support and knowledge for you to tap
into. Feel free to drop by with your questions or comments. See the official
CouchDB website for more information about our community resources.

<<<<<<< .mine
=======
Note: These instructions assume you have created the `couchdb` user. See the
specific system information included below to learn how to reconfigure this.

Note: If any of these methods report a failure you can run the `couchdb` command
manually to see the error messages it is displaying.

The `/usr/local/etc/logrotate.d/couchdb` file is provided as a logrotate
configuration that you can use to rotate Apache CouchDB's logs.

SysV/BSD-style Systems
++++++++++++++++++++++

Depending on your system the `couchdb` init script will be installed into a
direcory called `init.d` (for SysV-style systems) or `rc.d` (for BSD-style
systems). These examples use the `[init.d|rc.d]` notation to indicate this.

You can control the Apache CouchDB daemon by running:

    /usr/local/etc/[init.d|rc.d]/couchdb [start|stop|restart|force-reload|status]

If you wish to configure how the init script works, such as which user to run
Apache CouchDB as, you must edit the `/usr/local/etc/default/couchdb` file as
appropriate. If you are running the init script as a non-superuser you need to
remove the line with the `COUCHDB_USER` setting.

If you wish the Apache CouchDB daemon to run as a system service you need to
copy the `/usr/local/etc/[init.d|rc.d]/couchdb` script into your system wide
`/etc/[init.d|rc.d]` directory and update your system configuration.

You may be able to configure your system using the following command:

    sudo update-rc.d couchdb defaults

Consult your system documentation for more information.

Mac OS X
++++++++

You can use the `launchctl` command to control the Apache CouchDB daemon.

You can load the launchd configuration by running:

    sudo launchctl load /usr/local/Library/LaunchDaemons/org.apache.couchdb.plist

You can stop the Apache CouchDB daemon by running:

    sudo launchctl unload /usr/local/Library/LaunchDaemons/org.apache.couchdb.plist

You can start Apache CouchDB by running:

    sudo launchctl start org.apache.couchdb

You can restart Apache CouchDB by running:

    sudo launchctl stop org.apache.couchdb

You can change the launchd configuration by running:

    open /usr/local/Library/LaunchDaemons/org.apache.couchdb.plist

If you want the Apache CouchDB daemon to run at startup, copy the
`/usr/local/Library/LaunchDaemons/org.apache.couchdb.plist` file to your system
`/Library/LaunchDaemons` directory.

Windows
~~~~~~~

The Windows build process is very similar to the erlang build process;
indeed, we re-use some of their shell-scripts.  Therefore, it is recommended
you build erlang itself from sources - this will ensure that you have all the
tools and environment necessary to build couch itself.  A binary build of
erlang should work for those in a hurry (see below), but it isn't really
supported.  See the end of these notes or information on building erlang
which is relevant to couch.

Build Tools
-----------

To build on Windows, you need the following tools:

* cygwin - it isn't clear exactly which tools you need - select all
  'development' tools.  As mentioned above, if you can build erlang itself
  you have everything you need.

* VS2008

* Erlang - a built source distro of erlang is preferred.  A binary
  distribution of Erlang is OK, but you will also need a source distribution
  for the cc.sh/link.sh etc wrapper shell scripts used by erlang - couch
  reuses these scripts in its build process and the license isn't compatible
  enough for us to clone them.

Other tools:

* Fetch the 'curl' sources and build them as per the instructions.  The cygwin
  curl binaries are built with a different compiler so are no good.

* Download the ICU binaries built with VS2008.

* Download and build the same version of spidermonkey the version of couch
  requires - at time of writing this is 1.8.  Different versions will not
  work (ie, at time of writing, 1.8.1 does not work with couch).

Build Environment
-----------------

Setup your environment:

For the sake of everything you find sacred:
  set CYGWIN=nontsec
BEFORE starting any cygwin environments.  Set this variable globally.  Without
it you can expect all kinds of permissions-related problems.

Execute the VC .bat files to setup your environment such that cl.exe etc are
on your path.  Start a cygwin shell.

Check your environment:
  * which link -> should point at the MS linker.
  * which cl -> should point at the MS compiler.

If you are building from a source version of erlang:

  Executing  "eval `./otp_build env_win32`" as per the Erlang build
  instructions, will have set everything up, including the CC, LD etc
  variables.  Do this even if erlang is already built and you are just
  building couch.  This will have set the variables ERL_TOP, CC, LD, AD
  and a number of others.

  Then, PATH must be adjusted such what 'which erl' lists the erl.exe
  you built rather than the 'erl' script in the erts/etc/win32/cygwin_tools
  directory - eg:

  $ export PATH=$ERL_TOP/release/win32/erts-5.7.2/bin:$PATH

If you are building from a binary version of erlang:

  * set ERL_TOP to the top of the erlang directory

  Add to the PATH such that 'which erl' points at your erl.exe - eg:

  $ export PATH=$ERL_TOP/erts-5.6.5/bin

  You must also ensure the cc.sh etc scripts from the Erlang source tree is
  on your PATH.  Use "which cc.sh" to ensure the path is set correctly.

  Then set more variables:
    $ export CC=cc.sh
    $ export LD=ld.sh
    $ export AR=ar.sh
    $ export RC=rc.sh

Set COUCHDB_TOP to the source directory.

And we should be ready to bootstrap and build.

Building
--------

We start by bootstrapping:

  $ cd $COUCHDB_TOP
  $ ./bootstrap
  You have bootstrapped Apache CouchDB, time to relax.

  Run `./configure' to configure the source before you install.
  $

Relax.

Now we need to run a complicated configure command-line.

  $ ./configure \
      --with-js-include=/cygdrive/c/path_to_seamonkey_include \
      --with-js-lib=/cygdrive/c/path_to_seamonkey_lib \
      --with-win32-icu-binaries=/cygdrive/c/path_to_icu_binaries_root \
      --with-erlang=$ERL_TOP/release/win32/usr/include \
      --with-win32-curl=/cygdrive/c/path/to/curl/root/directory \
      --with-openssl-bin-dir=c:/openssl/bin \
      --with-msvc-redist-dir=c:/dir/with/vcredist_platform_executable \
      --prefix=$ERL_TOP/release/win32

Relax, then relax some more, then get a beer and relax some more; the
above command may take many many minutes to complete...

Note that all paths must be in cygwin format.  Those starting with $ERL_TOP
can be entered literally, assuming ERL_TOP is set as described above.

Notes:
  When building the installer, the necessary openssl binaries are pulled from
  the directory pointed to --with-openssl-bin-dir.

Now we can build it and "install" it into the $ERL_TOP/release/win32 (or
wherever you set --prefix to above) directory:

 $ make install
 
Relax on your new couch:

  The $ERL_TOP/release/win32 directory is now ready to .zip up, be packaged
  by an installer, etc.  To test it in-place, execute:

  $ $ERL_TOP/release/win32/bin/couchdb.bat

  and everything should work fine.

To create an installer, execute:

  $ make dist

and look for etc/windows/setup-couch*.exe.  Note - only do this after
a clean build, not after testing in-place - otherwise your test database and
log files will be shipped!
  

Additional Notes:

Building erlang:
* Follow the instructions as described.  You do need openssl, but don't need
  the GUI tools.  You may like to execute:

    echo "skipping gs" > lib/gs/SKIP
    echo "skipping ic" > lib/ic/SKIP

  To skip them.

* Ensure 'which link' points at the ms linker; one in /usr/bin may be found
  instead.

* After executing './otp_build release -a', be sure to execute Install.exe in
  the release/win32 directory to setup the release/win32/bin dir correctly.

Testing with Erlang
^^^^^^^^^^^^^^^^^^^

First, we need to get a copy of etap to run the tests.

    $ git clone git://github.com/ngerakines/etap.git
    $ cd etap
    $ make && sudo make install

Now we should be able to run the etap test suite:

    $ cd /path/to/couchdb/
    $ make check
    ...
    prove test/etap/*.t
    test/etap/001-load........................ok
    test/etap/010-file-basics.................ok
    ...
    All tests successful.
    Files=28, Tests=363, 41 wallclock secs (...)

Tests are also available to be run individually like such:

    $ ./test/etap/001-load.t
    # Current time local 2009-09-26 23:47:44
    # Using etap version "0.3.4"
    1..39
    ok 1  - Loaded: couch_btree
    ...
=======
For general help, see:

     http://couchdb.apache.org/community/lists.html

The mailing lists provide a wealth of support and knowledge for you to tap into.
Feel free to drop by with your questions or discussion. See the official CouchDB
website for more information about our community resources.
>>>>>>> f3303f2... documentation improvements:README

Cryptographic Software Notice
-----------------------------

<<<<<<< HEAD:README
   This distribution includes cryptographic software.  The country in
   which you currently reside may have restrictions on the import,
   possession, use, and/or re-export to another country, of
   encryption software.  BEFORE using any encryption software, please
   check your country's laws, regulations and policies concerning the
   import, possession, or use, and re-export of encryption software, to
   see if this is permitted.  See <http://www.wassenaar.org/> for more
   information.

   The U.S. Government Department of Commerce, Bureau of Industry and
   Security (BIS), has classified this software as Export Commodity
   Control Number (ECCN) 5D002.C.1, which includes information security
   software using or performing cryptographic functions with asymmetric
   algorithms.  The form and manner of this Apache Software Foundation
   distribution makes it eligible for export under the License Exception
   ENC Technology Software Unrestricted (TSU) exception (see the BIS
   Export Administration Regulations, Section 740.13) for both object
   code and source code.

   The following provides more details on the included cryptographic
   software:

   CouchDB includes a HTTP client (ibrowse) with SSL functionality.
=======
This distribution includes cryptographic software. The country in which you
currently reside may have restrictions on the import, possession, use, and/or
re-export to another country, of encryption software. BEFORE using any
encryption software, please check your country's laws, regulations and policies
concerning the import, possession, or use, and re-export of encryption software,
to see if this is permitted. See <http://www.wassenaar.org/> for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and Security
(BIS), has classified this software as Export Commodity Control Number (ECCN)
5D002.C.1, which includes information security software using or performing
cryptographic functions with asymmetric algorithms. The form and manner of this
Apache Software Foundation distribution makes it eligible for export under the
License Exception ENC Technology Software Unrestricted (TSU) exception (see the
BIS Export Administration Regulations, Section 740.13) for both object code and
source code.

The following provides more details on the included cryptographic software:

CouchDB includes a HTTP client (ibrowse) with SSL functionality.
>>>>>>> df02faf... initial round of documentation changes:README
